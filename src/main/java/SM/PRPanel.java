/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package SM;

/**
 *
 * @author dhoom
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class PRPanel extends javax.swing.JPanel {
    
        private PRManager prManager = new PRManager();
   
    /**
     * Creates new form PRPanel
     */
    public PRPanel() {
        initComponents();
        loadSuppliers();         
        loadPRs();               
        setupTableSelection();    
        clearFields(); 
        
       
    }
    
    private void setupTableSelection() {
        tblPRs.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = tblPRs.getSelectedRow();
            if (selectedRow >= 0) {
                txtPRID.setText(tblPRs.getValueAt(selectedRow, 0).toString());
                comboItemID.setSelectedItem(tblPRs.getValueAt(selectedRow, 1).toString());
                txtQuantity.setText(tblPRs.getValueAt(selectedRow, 2).toString());
                txtDate.setText(tblPRs.getValueAt(selectedRow, 3).toString());
                comboSupplierID.setSelectedItem(tblPRs.getValueAt(selectedRow, 4).toString());
                txtSalesManagerID.setText(tblPRs.getValueAt(selectedRow, 5).toString());

            }
        });
    }
    private void loadSuppliers() {
        try (BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\dhoom\\Downloads\\Supplier.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split("\\|");
                if (parts.length >= 1) {
                    comboSupplierID.addItem(parts[0]);  
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading suppliers: " + e.getMessage());
        }
    }
    private void loadItemsForSupplier(String supplierID) {
        comboItemID.removeAllItems(); 
        try (BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\dhoom\\Downloads\\Supplier.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split("\\|");
                if (parts[0].equals(supplierID)) {
                    if (parts.length >= 5) {
                        String[] items = parts[4].split("\\\\"); 
                        for (String item : items) {
                            comboItemID.addItem(item);
                        }
                    }
                    break;  
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading items for supplier: " + e.getMessage());
        }
    }
    private void loadPRs() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"PRID", "ItemIDs", "Quantities", "Date", "SupplierID", "SMID", "Status"}, 0);
        try {
            List<String[]> prs = prManager.loadPRs();
            for (String[] p : prs) {
                model.addRow(p);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading PRs: " + e.getMessage());
        }
        tblPRs.setModel(model);
        try {
            txtPRID.setText(prManager.generateNextPRID());
        } catch (IOException e) {
            txtPRID.setText("Error");
        }
    }
    private void clearFields() {
        txtPRID.setText("");
        if (comboItemID.getItemCount() > 0) {
            comboItemID.setSelectedIndex(0);
        }
        txtQuantity.setText("");
        txtDate.setText("");
        if (comboSupplierID.getItemCount() > 0) {
            comboSupplierID.setSelectedIndex(0);
        }
        txtSalesManagerID.setText("");  
        try {
            txtPRID.setText(prManager.generateNextPRID());
        } catch (IOException e) {
            txtPRID.setText("Error");
        }
    }
    

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPRs = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPRID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        comboItemID = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboSupplierID = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtSalesManagerID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnAddPR = new javax.swing.JButton();
        btnEditPR = new javax.swing.JButton();
        btnDeletePR = new javax.swing.JButton();
        btnClearPR = new javax.swing.JButton();

        tblPRs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PRID", "ItemID", "Quantity", "Date", "SupplierID", "SMID", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblPRs);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("PRID");

        txtPRID.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("ItemID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Quantity");

        comboItemID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboItemIDActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Date");

        comboSupplierID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSupplierIDActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("SupplierID");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("SalesManagerID");

        btnAddPR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddPR.setText("Add");
        btnAddPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPRActionPerformed(evt);
            }
        });

        btnEditPR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEditPR.setText("Edit");
        btnEditPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPRActionPerformed(evt);
            }
        });

        btnDeletePR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeletePR.setText("Delete");
        btnDeletePR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePRActionPerformed(evt);
            }
        });

        btnClearPR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearPR.setText("Clear");
        btnClearPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(comboSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboItemID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalesManagerID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddPR)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditPR))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDeletePR)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearPR))))
                    .addComponent(txtPRID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtPRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(comboSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSalesManagerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddPR)
                            .addComponent(btnEditPR))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeletePR)
                            .addComponent(btnClearPR))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPRActionPerformed
        String prid = txtPRID.getText().trim();
        String supplierID = (String) comboSupplierID.getSelectedItem();
        String smID = txtSalesManagerID.getText().trim();
        String date = txtDate.getText().trim();

   
        String itemID = (String) comboItemID.getSelectedItem();
        String quantity = txtQuantity.getText().trim();

        if (supplierID == null || smID.isEmpty() || date.isEmpty() || itemID == null || quantity.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.");
            return;
        }

 
        for (int i = 0; i < tblPRs.getRowCount(); i++) {
            if (tblPRs.getValueAt(i, 0).equals(prid)) {
                JOptionPane.showMessageDialog(this, "PR ID already exists.");
                return;
            }
        }

        try {
            String status = "Pending";  
            prManager.addPR(prid, itemID, quantity, date, supplierID, smID, status);
            loadPRs(); clearFields();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error adding PR: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAddPRActionPerformed

    private void btnEditPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPRActionPerformed
        String prid = txtPRID.getText().trim();
        String supplierID = (String) comboSupplierID.getSelectedItem();
        String smID = txtSalesManagerID.getText().trim();
        String date = txtDate.getText().trim();
        String itemID = (String) comboItemID.getSelectedItem();
        String quantity = txtQuantity.getText().trim();

        if (prid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a PR to edit.");
            return;
        }

        try {
            String status = "Pending";  
            prManager.editPR(prid, itemID, quantity, date, supplierID, smID, status);
            loadPRs(); clearFields();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error editing PR: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEditPRActionPerformed

    private void btnDeletePRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePRActionPerformed
        int selectedRow = tblPRs.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a PR to delete.");
            return;
        }

        String prid = tblPRs.getValueAt(selectedRow, 0).toString();
        try {
            prManager.deletePR(prid);
            loadPRs(); clearFields();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error deleting PR: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnDeletePRActionPerformed

    private void btnClearPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPRActionPerformed
        clearFields();       
    }//GEN-LAST:event_btnClearPRActionPerformed

    private void comboItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemIDActionPerformed

    private void comboSupplierIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSupplierIDActionPerformed
        String selectedSupplier = (String) comboSupplierID.getSelectedItem();
        if (selectedSupplier != null) {
            loadItemsForSupplier(selectedSupplier);
        }
    }//GEN-LAST:event_comboSupplierIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPR;
    private javax.swing.JButton btnClearPR;
    private javax.swing.JButton btnDeletePR;
    private javax.swing.JButton btnEditPR;
    private javax.swing.JComboBox<String> comboItemID;
    private javax.swing.JComboBox<String> comboSupplierID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPRs;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtPRID;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSalesManagerID;
    // End of variables declaration//GEN-END:variables
}
